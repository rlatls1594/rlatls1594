# # 교안 Python 기초(1주차).pdf 
# > 들어가기에 앞서 주의점
# 1. 영문 대소문자 구별 할 것
# 2. 들여쓰기 규칙은 꼭 지켜야할 것
# 3. 파이썬은 인터프리트 형식의 언어이기 때문에 실행 작업 수행 전에 바이트 코드 컴파일을 먼저 실행하고 실행 파일을 실행 -> 컴파일 + 인터프리트 혼합형 구조라고 생각하면 더 쉬움 -> 위에서부터 아래로 한 줄 씩 실행되는데 문법 오류가 발생 시 오류가 발생한 라인에서 멈춰버림 -> 문법, 철자 구분 확실히 해야함
# 4. 파이썬 언어는 클라우드 환경 자동화 관리 작업 할 때 많이 쓰인다 

# > 문자열 출력, 출력함수 print
# 홑 따옴표 또는 쌍 따옴표를 사용하여 문자열 출력

# print('Hello Python') / print("Hello Python")

# - 실제 코드 활용 시 거의 쓰이지는 않는다
# - 결과물을 화면에 출력해주는 출력함수일 뿐
# - 다만, print 출력함수는 디버깅 할 때 유용하게 사용된다. (오류 발생 시 오류 발생 문장 찾을 때 사용)


# 한 줄 주석은 "#" 으로 표현. 

"""
여러 줄 주석
여러 줄 주석
여러 줄 주석
여러 줄 주석
여러 줄 주석
"""

# + 여러 줄 주석 처리 할 경우 영역 드래그 후 ctrl + / 
# + 예제 한 덩어리 입력하고 주석처리 할 것
# + visualstudio 하단 터미널 창에서 cls 입력 시 터미널 창 초기화
# + 한 줄을 복사 하고 싶으면 드래그 해서 영역지정하지 않아도 됨. 줄에 커서 놓고 그냥 ctrl + c 누르면 줄 전체가 복사됨
# + ctrl + alt 누르고 마우스 방향키로 입력 칸 수를 늘릴 수 있다 -> 3칸, 4칸 등 동시 입력 가능

# [예제.1]
# print("Hello Python")
# print("Python Test!!!")
# print("안녕"); print("하세요")

# -> 파이썬에서는 쌍 따옴표, 홑 따옴표 아무거나 사용해도 되지만 C언어는 문자열일 경우 " " 쌍 따옴표 , 단일 문자일 경우 ' ' 홑 따옴표 사용.
# -> ; 세미 콜론은 한 줄에 여러 코드를 사용할 경우 코드 구분을 위해 사용
# -> print("안녕")
# -> print("하세요") 
# -> ; 세미 콜론 사용안 할 경우 위와 같이 입력해야한다
# -> 똑같음. 그냥 사용하고 싶은 방식 사용하기

# [예제.2]
# print("10더하기20은", 10+20)
# print("10 + 20 =", 10+20)
# print("2곱하기2는", 2*2)
# print("2 * 2 =", 2*2)

# -> , 콤마로 구분 할 수 있다
# -> 간단한 연산식 계산 가능
# -> 쌍 따옴표로 묶인 영역은 "문자열"로 처리, 데이터 Type(타입)이 "문자열"
# -> ***** 반드시 데이터의 Type(타입) 구분을 할 수 있어야한다. *****
# -> "10"은 문자열 10 , 10은 숫자값 10 , + * 등은 연산자 / 파이썬은 매우 쉬운, 사용자 친화적 언어이기 때문에 따로 Type 구분을 하지 않아도 자동으로 구분 되지만, 구분 하는 것이 다른 언어를 배우는데 있어서 유용하다
# -> 프로그래밍 언어는 2개 정도는 할 수 있어야한다. " Java , Python "
# -> 이직 준비할 때, 시간 남을 때 조금씩 꾸준히 Java 언어 공부할 것을 추천한다.

# > 이스케이프 문자
# 이스케이프 문자 		기능
# \n 				다음 줄로 이동
# \r 				해당 줄의 처음으로 이동 -> 거의 안 씀. 버려도 됨
# \t 				8칸 공백 ( 앞에서부터 8칸 공백이므로, 앞에 asd 3글자가 적혀있으면 5칸 공백 , 앞에 asdf 4글자가 적혀있으면 4칸 공백, 8글자가 넘어가면 다시 8칸 공백)

# \'				'문자
# \“				"문자
# \\				\문자
# -> \ 역슬래시, 원 기호는 문자 처리하겠다 라는 뜻
# -> print("TEST "강조!"") 입력함으로써 "강조!" 를 출력하려하면 \기호를 사용해줘야 함.
# -> print("TEST "강조!"") 이대로 입력하고 실행하면 신텍스 에러 발생
# -> print("TEST \"강조!\"") 로 입력해야 정상적으로 TEST "강조!" 출력됨

# [예제.3]
# print("라인\n변경\n테스트")
# print("AAA\tBBB\tCCC")
# print("!!!\t@@@\t###")
# print("123\t456\t789")
# print("내용 \"강조\"")
# print('내용 \'강조\'')
# print("내용 \\강조\\")
# print("내용 '강조'")
# print('내용 "강조"')

# -> \n 은 줄바꿈 / 테스트" 에서 트 와 " 사이에 보이지는 않지만 \n이 생략되어있다 
# -> \t는 탭 (기본 8칸)
# -> 굳이 \" , \' 를 사용하지 않아도 따옴표만 바꿔 써도 출력된다.

# > 문제
# 앞에서 학습한 내용을 바탕으로 다음 양식을 출력하시오.
				#### 회비 정보 ####
# ==========================================
# 이름			나이	 	전화번호			 회비
# ==========================================
# 김동완		38 		010 1111 1111 		￦ 20,000
# 서지수		24 		010 1234 5678 		￦ 30,000
# 이지은		25 		010 2525 2345 		￦ 50,000
# -----------------------------------------------------------------------------
# 총합계								￦ 100,000
# ==========================================

# 문제 정답 코드
# print("\t  #### 회비 정보 ####")
# print("================================================")
# print("이름\t나이\t전화번호\t회비")
# print("================================================")
# print("김동완\t38\t010-1111-1111\t\\20,000")
# print("서지수\t24\t010-1234-5678\t\\30,000")
# print("이지은\t25\t010-2525-2345\t\\50,000")
# print("------------------------------------------------")
# print("총합계\t\t\t\t\\100,000")
# print("================================================")


# (진법은 과감하게 건너뜀. 거의 사용하지 않음)
# > 서식 문자
# - 출력 되는 문자열에 대해 특정 서식을 지정하고 출력하기 위해서 사용 된다
# C 스타일	Python 3	설명
# %s		{ }		문자열 출력***
# %d		{ }		정수 출력***
# 		{:b}		표현식 없는 2 진수 값 출력
# %o		{:o}		표현식 없는 8 진수 값 출력
# %x		{:x} 		표현식 없는 16 진수 값 출력
# %f		{:f}		실수 출력*
# %.2f		{:.2f}		소수점 2 자리 까지의 실수 출력*
# %6d		{:6}		6자리 고정 출력
# -> c 스타일, Python3 모두 사용 가능
# -> 어떤 것을 사용해도 상관 없지만 python3 위주로 살펴보기

# [예제.5]
# 1. 단일 문자 및 문자열 출력
# print("{}{}".format("A", "String"))    # 파이썬3 스타일
# print("AString")
# print("%c%s" %('A', "String"))   # c스타일

# 1-1. 서식문자, { } 중괄호 사용
# A=100
# print("Test{}Test".format(A))
# A=200
# print("Test{}Test".format(A))

# -> 파이썬3 스타일에서 print("{}{}".format("A", "String")) -> 중괄호에 넣어줄 값을 뒤에 괄호에서 " ", " " 로 지정해준 것
# -> 변수 값에 따라서 출력 결과가 달라지게 만들기 위해서 서식문자, { } 중괄호 사용

# 2. 소수점 수 출력
# print("키:{:f}/몸무게:{:f}".format(180.12, 83.12))
# print("키:{:f}/몸무게:{}".format(180.12, 83.12))
# print("키:{:.1f}/몸무게:{:.2f}".format(180.12, 83.12))

# -> :f 출력은 무조건 소수점 6자리까지 출력됨 -> 불편하면 소수점 자리를 지정할 수 있음 
# -> :.1f는 소수점 첫 번째 자리까지 출력, :.3f는소수점 세 번째 자리까지 출력 
# -> print("키:{:f}/몸무게:{}".format(180.12, 83.12)) 로도 사용은 가능하나 바람직한 방법은 아니다. :f로 형식을 맞춰주는게 바람직하다.

# 3. 고정길이 출력 및 값 정렬 (천단위 자동입력)
# print("{}원".format(10000))
# print("{:10}원".format(10000))
# print("{:>10}원".format(10000))
# print("{:<10}원".format(10000))
# print("{:^10}원".format(10000))
# print("{:,}원".format(10000))
# print("{:0>10}원".format(10000))
# print("{:_>10}원".format(10000))

# -> {:10} 으로 10칸 확보했기때문에 
# -> 꺽쇠로 오른쪽 정렬 > / 왼쪽 정렬 < / 가운데 정렬 ^
# -> , 를 사용해서 천단위 자동 콤마도 가능
# -> 특정 문자를 추가할 수도 있다. 0 또는 _ 등 

# > [문제]
# 아래 출력물을 서식 문자를 활용하여 출력 하시오
#                         파이썬 쇼핑몰
# 번호  : 1078718855
# 주소  : 서울시 종로구 종로 3 가
# 성명  : 김사장
# 전화  : 070 1234 5678
# --------------------------------------------------------------
#   품명              단가            수량              금액
# --------------------------------------------------------------
# 블루투스 이어폰       85,000            1               85,000
# USB3.0 8G             8,000            1                8,000
# --------------------------------------------------------------
# 소계                                                    93,000
# --------------------------------------------------------------
# 청구금액                                                93,000
# 받은금액                                               100,000
# 거스름돈                                                 7,000
# --------------------------------------------------------------

# 문제 정답 코드
# 내가 쓴 코드
# print("\t파이썬 쇼핑몰")
# print("번호 : %d"%(107871885))
# print("주소 : %s %s %s"%("서울시", "종로구", "종로3가"))
# print("성명 : %c %c %c"%("김","사","장"))
# print("전화 : 0%d-%d-%d"%(70, 1234, 5678))
# print("-" * 60)
# print("{}{}\t\t\t{}{}\t{}{}\t{}{}".format("품","명","단","가","수","량","금","액"))
# # print{%s%s"%("품","명"),"\t\t%s%s"%("단","가"), "\t%s%s"%("수","량"), "\t%s%s"%("금","액")}             
# print("블루투스 이어폰\t\t%d"% 85000,"\t1","\t%d"% 85000) 
# print("USB3.0 8G\t\t8,000\t1\t8,000") 
# print("-" * 60)
# print("%s"%"소계""\t\t\t\t\t93,000")
# print("%s"%"청구금액""\t\t\t\t93,000")
# print("받은금액\t\t\t\t100,000")
# print("거스름돈\t\t\t\t7,000")
# print("-" * 60)

# 선생님 코드
# print('\t\t{}' .format('파이썬 쇼핑몰'))
# print('번호 : {}' .format(1078718855))
# print('주소 : {}' .format('서울시 종로구 종로 3가'))
# print('성명 : {}' .format('강사'))
# print('전화 : {}' .format('070-1234-5678'))
# print('----------------------------------------------')
# print('\t{}\t\t{}\t{}\t{}' .format ('품명',' 단가',' 수량',' 금액'))
# print('----------------------------------------------')
# print('{:>10}\t{:,}\t{:>4}\t{:,}' .format('블루투스 이어폰',85000,1,85000))
# print('{:>12}\t\t{:>6,}\t{:>4}\t{:>6,}' .format('USB 3.0 8G',8000,1,8000))
# print('----------------------------------------------')
# print('{}\t\t\t\t\t{:,}' .format('소 계', 93000))
# print('----------------------------------------------')
# print('{}\t\t\t\t{:,}' .format('청구금액', 93000))
# print('{}\t\t\t{:>14,}' .format('받은금액', 100000))
# print('{}\t\t\t\t{:>6,}' .format('거스름돈', 7000))
# print('----------------------------------------------')

# [변수]
# - 한 가지의 값으로 고정되어있지 않고, 여러 값으로 변할 수 있는 데이터 저장 공간
# - 데이터를 사용하기 위해 메모리의 공간을 할당 받아 해당 공간에 이름을 부여하여 사용
# -> 어떠한 데이터 자체가 아님. 메모리의 공간 개념임.

# 변수 작명 규칙
# 1. 알파벳 , 숫자 , 언더스코어 로 구성
# 2. 알파벳은 대 소문자 구분
# 3. 한글 사용 가능 -> 사용은 가능하지만 안쓰는게 베스트
# 4. 변수명의 시작은 숫자로 할 수 없음 -> 1_var , 2_var X / var_1 , var_2 O
# 5. 공백이나 특수 기호는 포함 할 수 없음 -> 공백은 구분자의 역할 
# 6. Python 예약어는 사용하면 안된다 -> 변수 이름이 print? -> 절대 불가능

# 변수 자료형 종류
# -> 기본자료형
# 1. 정수 : 0 과 음수 , 양수 값을 포함하는 숫자 값 -> int A=100 이런 식으로 사용하지 않아도 된다.
# 2. 실수 : 소수점을 사용하는 숫자 값 
# 3. 문자열 : 따옴표로 묶여 있는 값
# -> 자료구조형
# 4. 리스트 : 정수 , 실수 및 문자열 등 자료들의 집합 값의 집합
# 5. 튜플 : 정수 , 실수 및 문자열 등 자료들의 집합 값의 집합
# 6. 사전 : 정수 , 실수 , 및 문자열 등 자료들의 집합 키와 값이 쌍으로 존재

# [예제.6]
# var1 = 100
# var2 , var3 = 200, 300
# var4 = var5 = 500
# print("var1={}, var2={}, var3={}, var4={}, var5={}".format(var1,var2,var3,var4,var5))

# -> 대입 연산자가 많으면 가장 오른쪽부터 해석, var4 = var5 = 500 -> var5 = 500 / var4 = var5
# -> 변수가 5개면 5개의 칸이 있어야한다. 변수가 2개인데 {} 는 하나면 에러남

# v1 = 100; v2 = 1.123; v3 = "123"
# print(v1, type(v1)); print(v2, type(v2)); print(v3, type(v3))

# A = v1 - v2
# print(A, type(A))
# print(v2, type(v2))
# A = v1 - int(v2)
# print(A, type(A))
# v2 = int(v2)
# print(v2, type(A))
# v1 = float(v1)
# print(v1, type(v1))
# v3 = int(v3)
# print(v3, type(v3))
# v3 = str(v3)
# print(v3, type(v3))
# v3 = "ASD"
# print(v3, type(v3))
# v3 = int(v3)
# print(v3, type(v3))
# -> v3를 ASD 문자열로 바꿨는데 정수형으로 표현하려면 에러가 난다
# -> 왜? 숫자를 문자열로 바꿀 수는 있지만 문자를 숫자로 표현할 수 없다
# -> v1, v2, v3의 자료형을 보겠다
# -> print로 묶어주고 출력해줘야 결과물을 볼 수 있다
# -> ***** 100과 123은 눈에 보이기에는 같은 숫자 값으로 보이지만 자료형을 살펴보면 100은 정수 int , 123 은 문자열 str 로 다르다. ***** -> 자료형을 잘 구분할 수 있어야 한다
# -> 정수 - 실수 의 결과가 실수 float 로 나옴. 
# -> 자료형 변환이 필요함
# -> 완전히 바뀌는게 아님
# -> 완전히 바뀌게 하려면 대입을 새로해야함
# -> 위에서 v3 를 문자열 ASD로 바꿨는데 ASD 를 다시 정수형으로 바꿔서 실행하면 에러가 나게된다. 왜? 숫자를 문자열로 표현할 수 있지만 문자를 숫자로 표현할 수는 없다


# [연습 문제]
# [문제.1] : num1(10) + num2(20) = 30 출력해 주세요.
# 단, 10 , 20 , 30 은 변수를 이용하여 출력

# num1 = 10
# num2 = 20
# total = num1 + num2
# print("num1(%d) + num2(%d) = %d" % (num1, num2, total))

# [문제.2] 
# num1 = 7 
# num2 = 5
# 위 값의 연산 결과를 각각의 변수에 저장 후 출력 (+,-,*,/) 

# num1 = 7 
# num2 = 5
# plus = num1 + num2
# minus = num1 - num2
# multiply = num1 * num2
# divide = num1 / num2
# print("%d + %d = %d" % (num1, num2, plus))
# print("%d - %d = %d" % (num1, num2, minus))
# print("%d * %d = %d" % (num1, num2, multiply))
# print("%d / %d = %.2f" % (num1, num2, divide))

# [문제.3]
# 1. 다음과 같이 나오도록 코딩 하세요. ( 단, 변수를 사용 할 것 ) Python 100점
# 2. 다음과 같이 나오도록 코딩 하세요. ( 단, 변수를 사용 할 것 ) 나는 20살입니다.
# 3. Python , C언어 , Java 3과목의 점수를 각 변수에 저장
# 합계와 평균을 구하는 프로그램을 만드시오. ( 평균은 소수점 2자리 까지 )

# language = "Python"
# score = 100
# print(f"{language} {score}점")

# age = 20
# print(f"나는 {age}살입니다.")

# score_python = 85
# score_c      = 92
# score_java   = 78
# total   = score_python + score_c + score_java
# average = total / 3
# print(f"Python 점수: {score_python}")
# print(f"C언어 점수: {score_c}")
# print(f"Java 점수: {score_java}")
# print(f"합계       : {total}")
# print(f"평균       : {average:.2f}")

#[문제.4]
# su = 100
# num ='100'
# fit = 1.111
# 위 변수들을 선언 후 위 변수를 이용하여 아래와 같은 출력 결과가 나오도록 코드를 완성하세요.
# 힌트 : 문자열 + 문자열은 문자열 이어붙이기가 된다.

# [출력결과]
# 200
# 101.111
# 100100

# su  = 100
# num = '100'
# fit = 1.111

# # 1) 정수 덧셈
# print(su + su)       # 200

# # 2) 실수 연산
# print(su + fit)      # 101.111

# # 3) 문자열 결합
# print(num + num)     # '100100'

# # 4) 한 줄에 모두 출력
# print(su + su, su + fit, num + num, sep='\n')


# 선생님 정답 코드
# # [문제.1] : num1(10) + num2(20) = 30 출력해 주세요.
# # 단, 10 , 20 , 30 은 변수를 이용하여 출력
# num1 = 10
# num2 = 20
# print("num1({})+num2({})={}".format(num1,num2,num1+num2))


# # [문제.2] 
# # num1 = 7 
# # num2 = 5
# # 위 값의 연산 결과를 각각의 변수에 저장 후 출력 (+,-,*,/) 

# num1 = 7
# num2 = 5
# sum = num1 + num2
# sub = num1 - num2
# mul = num1 * num2
# div = num1 / num2
# print("num1 + num2 = ", sum)
# print("num1 - num2 = ", sub)
# print("num1 * num2 = ", mul)
# print("num1 / num2 = ", div)


# # [문제.3]
# # 1. 다음과 같이 나오도록 코딩 하세요. ( 단, 변수를 사용 할 것 ) Python 100점
# # 2. 다음과 같이 나오도록 코딩 하세요. ( 단, 변수를 사용 할 것 ) 나는 20살입니다.
# # 3. Python , C언어 , Java 3과목의 점수를 각 변수에 저장
# # 합계와 평균을 구하는 프로그램을 만드시오. ( 평균은 소수점 2자리 까지 )

# py1 = 100
# print("Python {}점".format(py1))
# py2 = 20
# print("나는 {}살 입니다.".format(py2))

# 파이썬점수=100
# C언어점수=70
# Java점수=80

# sum=파이썬점수+C언어점수+Java점수
# avg=sum/3
# print("3과목 총점은 = {}".format(sum))
# print("3과목 평균은 = {:.2f}".format(avg))


# # [문제.4]
# # su = 100
# # num ='100'
# # fit = 1.111
# # 위 변수들을 선언 후 위 변수를 이용하여 아래와 같은 출력 결과가 나오도록 코드를 완성하세요.
# # 힌트 : 문자열 + 문자열은 문자열 이어붙이기가 된다.

# # [출력결과]
# # 200
# # 101.111
# # 100100

# su = 100
# num ='100'
# fit = 1.111
# print("{}".format(type(su)))
# print("{}".format(type(num)))
# print("{}".format(type(fit)))
# print("정수 형변환 : {}".format(su+int(num)))
# print("실수 형변환 : {:.3f}".format(su+fit))
# print("문자열 형변환 : {}".format(str(su)+num))
















